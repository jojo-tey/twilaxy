[{"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\index.js":"1","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\App.js":"2","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Router.js":"3","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Auth.js":"4","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Home.js":"5","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\fBase.js":"6","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\fbase.js":"7","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Navigation.js":"8","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Profile.js":"9","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Tweet.js":"10"},{"size":208,"mtime":1609885396341,"results":"11","hashOfConfig":"12"},{"size":1268,"mtime":1609982067962,"results":"13","hashOfConfig":"12"},{"size":960,"mtime":1609981323475,"results":"14","hashOfConfig":"12"},{"size":2190,"mtime":1609883767336,"results":"15","hashOfConfig":"12"},{"size":2628,"mtime":1609977630093,"results":"16","hashOfConfig":"12"},{"size":454,"mtime":1609862098272,"results":"17","hashOfConfig":"12"},{"size":738,"mtime":1609967315158,"results":"18","hashOfConfig":"12"},{"size":278,"mtime":1609980897502,"results":"19","hashOfConfig":"12"},{"size":1421,"mtime":1609982230457,"results":"20","hashOfConfig":"12"},{"size":1966,"mtime":1609979798983,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ozd9h4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\index.js",[],["44","45"],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\App.js",[],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Router.js",[],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Auth.js",[],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Home.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Tweet from \"components/Tweet\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [tweets, setTweets] = useState([]);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  useEffect(() => {\r\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n      const tweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTweets(tweetArray);\r\n    });\r\n  }, []);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    // if photo uploaded\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    // if no photo uploaded\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    }\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => {setAttachment(\"\")};\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Tweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\fBase.js",["47","48"],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\fbase.js",[],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Navigation.js",[],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\routes\\Profile.js",["49"],"E:\\WORKSPACE\\twilaxy\\twilaxy\\src\\components\\Tweet.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":74,"column":13,"nodeType":"57","endLine":74,"endColumn":64},{"ruleId":"58","severity":1,"message":"59","line":1,"column":13,"nodeType":"60","messageId":"61","endLine":1,"endColumn":21},{"ruleId":"62","severity":2,"message":"63","line":13,"column":16,"nodeType":"60","messageId":"64","endLine":13,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":5,"column":1,"nodeType":"67","endLine":50,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":49,"column":34,"nodeType":"57","endLine":49,"endColumn":97},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-undef","'fbase' is not defined.","undef","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]